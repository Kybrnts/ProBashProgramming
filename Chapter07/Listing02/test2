#!/bin/bash
#: Title       : Test
#: Date        : 2016-05-21
#: Author      : "Kybernetes" <correodelkybernetes@gmail.com>
#: Version     : 1.1
#: Description : Test script for getfirstn() and getlastn()
#: Options     : N/A

## Inclusions
. ${0%/*}/firstchars

displayn() {
    local string=$1
    local from=${2:-first}
    local -i num=$3
    shift $#

    ## Protect next function call. (only first or last are defined)
    case $from in
	first|last) : ;;
	*) from=first ;;
    esac
    
    printf "\n${from^} %d chars of \"%s\": " $num "$string"
    get${from}n "$string" $num
}

main() {
    ## Function header
    shift $#

    ## Local variables
    local teststring="Dixie Flatline" ## Test string container
    local -i fn=3 ln=10               ## Number of characters to get from teststring
    ## Use first version of getfirstn() and getlastn()
    displayn "$teststring" first $fn
    displayn "$teststring" last $ln

    ## Test with another string
    teststring="/!\\ - Alert message /!\\"
    fn=4 ln=12
    displayn "$teststring" first $fn
    displayn "$teststring" last $ln
   
    teststring="Norbert Wiener"
    fn=9 ln=2
    displayn "$teststring" first $fn
    displayn "$teststring" last $ln

    teststring=""
    fn=0 ln=-12
    displayn "$teststring" first $fn
    displayn "$teststring" last $ln

    printf "%s\n" "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
    ## Now test lastchars()
    . ${0%/*}/firstchars
    teststring="Dixie Flatline" ## Test string container
    fn=3 ln=10               ## Number of characters to get from teststring
    ## Use first version of getfirstn() and getlastn()
    displayn "$teststring" first $fn
    displayn "$teststring" last $ln

    ## Test with another string
    teststring="/!\\ - Alert message /!\\"
    fn=4 ln=12
    displayn "$teststring" first $fn
    displayn "$teststring" last $ln
   
    teststring="Norbert Wiener"
    fn=9 ln=2
    displayn "$teststring" first $fn
    displayn "$teststring" last $ln

    teststring=""
    fn=0 ln=-12
    displayn "$teststring" first $fn
    displayn "$teststring" last $ln
}

main "$@"
