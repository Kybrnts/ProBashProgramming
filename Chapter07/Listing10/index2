#: Title       : Index
#: Date        : 2016-06-15
#: Author      : "Kybernetes" <correodelkybernetes@gmail.com>
#: Version     : 1.1
#: Description : Bash function declarations file
#:             : Return position of one string inside another

## Function declarations
_index() { #@ DESCRIPTION: Store position of $2 in $1 in $_INDEX
           #@ USAGE:
    local ref_index=${1:?"$FUNCNAME: Missing name argument"}
    local string=${2:?"$FUNCNAME: Missing nonnull argument"} ## A random string
    local substr=${3:?"$FUNCNAME: Missing nonnull argument"} ## A substring of the previous one
    shift $# ## NOTE: Passing unset or null arguments makes no sense. No index could be retrieved
    
    local idx=       ## Random string after removing substring from its back
    local -i index=0 ## The index
    case $string in
	*"$substr"*)                     ## Is a substring? 
	    idx=${string%%"$substr"*}    ## Extract up to beginning of the matching part
	    index=$(( ${#idx} + 1 )) ;;  ## Starting pos is one more than length
	*)  return 1 ;;                  ## Handle any other cases
    esac
    printf -v $ref_index "%d" $index
}
index() {
    set -- "${@:1:2}"

    local -i __index=0
    if ! _index __index "$@"; then
	printf "%d\n" $__index
	return 1
    fi
    printf "%d\n" $__index
}
