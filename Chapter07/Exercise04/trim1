#: Title       : Trim
#: Date        : 2016-06-21
#: Author      : "Kybernetes" <correodelkybernetes@gmail.com>
#: Version     : 1.0
#: Description : Bash function declarations file
#:             : 

## Global variables
declare _LTRIM= _RTRIM= _TRIM=

## Function declarations
_ltrim() {
    local trim_string=${1?"$FUNCNAME: Missing argument"}  ## Input string
    local to_trim=${2:-$' \t'}                            ## Part to be removed (default to space or tab)
    shift $#

    _LTRIM=$trim_string
    ## Remove from the first nonmatching character of trim_string, to the end.
    trim_string=${_LTRIM%%[^"$to_trim"]*} ## I.e. remove to_trim right complement from string
    ## Remove the (unwanted) remaining string from the beginning of the trim_string
    _LTRIM=${_LTRIM#"$trim_string"}
}
ltrim() {
    set -- "${@:1:2}"
    _ltrim "$@"
    [ -n "$_LTRIM" ] && printf "%s\n" "$_LTRIM"
}
_rtrim() {
    local trim_string=${1?"$FUNCNAME: Missing argument"}  ## Input string
    local to_trim=${2:-$' \t'}                            ## Part to be removed (default to space or tab)
    shift $#

    _RTRIM=$trim_string
    trim_string=${_RTRIM##*[^"$to_trim"]} ## Remove to_trim left complement from string
    _RTRIM=${_RTRIM%"$trim_string"}       ## Remove the remaining string from the beginning
}
rtrim() {
    set -- "${@:1:2}"
    _rtrim "$@"
    [ -n "$_RTRIM" ] && printf "%s\n" "$_RTRIM"
}
_trim() {
    local trim_string=${1?"$FUNCNAME: Missing argument"}  ## Input string
    local to_trim=${2:-$' \t'}                            ## Part to be removed (default to space or tab)
    shift $#

    _ltrim "$trim_string" "$to_trim"
    _rtrim "$_LTRIM" "$to_trim"
    _TRIM="$_RTRIM"
}
trim() {
    set -- "${@:1:2}"
    _trim "$@"
    [ -n "$_TRIM" ] && printf "%s\n" "$_TRIM"
}
